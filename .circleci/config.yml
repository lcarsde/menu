# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  deploy_aur:
    docker:
      - image: atennert/archlinux-cci-aur:0.0.3
        auth:
          username: atennert
          password: $DOCKERHUB_PASSWORD

    steps:
      - add_ssh_keys:
          fingerprints:
            - 78:cd:db:a2:c1:cb:65:7a:16:75:b9:ec:08:7b:62:c3

      # get deployment files for lcarsde-app-menu
      - run: git clone ssh://aur@aur.archlinux.org/lcarsde-app-menu.git

      # log the current contents
      - run: cat lcarsde-app-menu/PKGBUILD
      - run: cat lcarsde-app-menu/.SRCINFO

      # update content
      - run: cd lcarsde-app-menu && sed -i -e "s/^pkgver=[0-9\.]*$/pkgver=$CIRCLE_TAG/" PKGBUILD
      - run: cd lcarsde-app-menu && updpkgsums
      - run: cd lcarsde-app-menu && makepkg --printsrcinfo > .SRCINFO

      # log the new contents
      - run: cat lcarsde-app-menu/PKGBUILD
      - run: cat lcarsde-app-menu/.SRCINFO

      # upload new contents
      - run: cd lcarsde-app-menu && git add -u && git commit -m "update to version $CIRCLE_TAG" && git push

  deploy_ubuntu:
    docker:
      - image: cimg/base:stable

    working_directory: ~/repo

    steps:
      - checkout

      # install dependencies
      - run: sudo apt-get update
      - run: sudo apt-get install -y devscripts debhelper fakeroot

      - run: ./deploy-deb.sh lcarsde-app-menu

      - run: |
          if ls -1qA ~/repo/build/deb/deploy | grep -q . ; then
            echo "deb package built!";
          else
            echo "deb package not built"; exit 1
          fi

      - persist_to_workspace:
          root: ~/repo
          paths:
            - build/deb/deploy

  publish_github_release:
    docker:
      - image: cibuilds/github:0.10

    steps:
      - attach_workspace:
          at: ~/repo

      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ~/repo/build/deb/deploy/

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - deploy_aur:
          context:
            - lcarsde-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy_ubuntu:
          context:
            - lcarsde-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - publish_github_release:
          context:
            - lcarsde-context
          requires:
            - deploy_ubuntu
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
